#!/bin/bash

# Script de d√©marrage automatique pour l'outil de traitement d'images
# Ce script d√©marre automatiquement le backend et le frontend

echo "D√©marrage de l'outil de traitement d'images..."

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -d "backend" ] || [ ! -d "frontend" ]; then
    echo "Erreur: Ce script doit √™tre ex√©cut√© depuis le r√©pertoire racine du projet"
    echo "   Assurez-vous d'√™tre dans le r√©pertoire image-processing-tool/"
    exit 1
fi

# Fonction pour nettoyer les processus en arri√®re-plan
cleanup() {
    echo "Arr√™t des serveurs..."
    kill $BACKEND_PID $FRONTEND_PID 2>/dev/null
    exit 0
}

# Capturer Ctrl+C pour nettoyer proprement
trap cleanup SIGINT

echo "V√©rification des d√©pendances..."

# V√©rifier Python
if ! command -v python3 &> /dev/null; then
    echo "Python 3 n'est pas install√©"
    exit 1
fi

# V√©rifier Node.js
if ! command -v node &> /dev/null; then
    echo "Node.js n'est pas install√©"
    exit 1
fi

# V√©rifier Angular CLI
if ! command -v ng &> /dev/null; then
    echo "Installation d'Angular CLI..."
    npm install -g @angular/cli
fi

echo "üîß Installation des d√©pendances backend..."
cd backend
if [ ! -d "venv" ]; then
    echo "Cr√©ation de l'environnement virtuel Python..."
    python3 -m venv venv
fi

source venv/bin/activate 2>/dev/null || . venv/Scripts/activate 2>/dev/null
pip install -r requirements.txt > /dev/null 2>&1

echo "D√©marrage du serveur backend (port 8000)..."
uvicorn main:app --host 0.0.0.0 --port 8000 > ../backend.log 2>&1 &
BACKEND_PID=$!

cd ../frontend

echo "Installation des d√©pendances frontend..."
npm install > /dev/null 2>&1

echo "D√©marrage du serveur frontend (port 4200)..."
ng serve --host 0.0.0.0 --port 4200 > ../frontend.log 2>&1 &
FRONTEND_PID=$!

echo "Attente du d√©marrage des serveurs..."
sleep 10

# V√©rifier que les serveurs sont d√©marr√©s
if curl -s http://localhost:8000/ > /dev/null; then
    echo "Backend d√©marr√© avec succ√®s sur http://localhost:8000"
else
    echo "Erreur lors du d√©marrage du backend"
    cat ../backend.log
    exit 1
fi

if curl -s http://localhost:4200/ > /dev/null; then
    echo "Frontend d√©marr√© avec succ√®s sur http://localhost:4200"
else
    echo "Frontend en cours de d√©marrage..."
    sleep 15
    if curl -s http://localhost:4200/ > /dev/null; then
        echo "Frontend d√©marr√© avec succ√®s sur http://localhost:4200"
    else
        echo "Erreur lors du d√©marrage du frontend"
        cat ../frontend.log
        exit 1
    fi
fi

echo ""
echo "Application d√©marr√©e avec succ√®s !"
echo "Frontend: http://localhost:4200"
echo "Backend API: http://localhost:8000"
echo "Documentation API: http://localhost:8000/docs"
echo ""
echo "Appuyez sur Ctrl+C pour arr√™ter les serveurs"

# Attendre ind√©finiment
wait

